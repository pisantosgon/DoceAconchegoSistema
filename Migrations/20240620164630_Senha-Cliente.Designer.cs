// <auto-generated />
using System;
using Doceaconchego.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Doceaconchego.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20240620164630_Senha-Cliente")]
    partial class SenhaCliente
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Doceaconchego.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoriaId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaId"));

                    b.Property<string>("NomeCategoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NomeCategoria");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("Doceaconchego.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ClienteId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"));

                    b.Property<string>("CpfCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CpfCliente");

                    b.Property<string>("EmailCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EmailCliente");

                    b.Property<string>("FoneCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FoneCliente");

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NomeCliente");

                    b.Property<string>("SenhaCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SenhaCliente");

                    b.Property<string>("SexoBebe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SexoBebe");

                    b.Property<string>("SexoCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SexoCliente");

                    b.HasKey("ClienteId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Doceaconchego.Models.Clientehasvendas", b =>
                {
                    b.Property<int>("ClientehasvendasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ClientehasvendasId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientehasvendasId"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("VendaId")
                        .HasColumnType("int");

                    b.HasKey("ClientehasvendasId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("VendaId");

                    b.ToTable("Clientehasvendas");
                });

            modelBuilder.Entity("Doceaconchego.Models.Produto", b =>
                {
                    b.Property<int>("ProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProdutoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProdutoId"));

                    b.Property<string>("CorProduto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CorProduto");

                    b.Property<string>("DescricaoProduto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DescricaoProduto");

                    b.Property<string>("ImgProduto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ImgProduto");

                    b.Property<string>("NomeProduto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NomeProduto");

                    b.Property<int>("PrecoProduto")
                        .HasColumnType("int")
                        .HasColumnName("PrecoProduto");

                    b.Property<int>("SubcategoriaId")
                        .HasColumnType("int");

                    b.HasKey("ProdutoId");

                    b.HasIndex("SubcategoriaId");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("Doceaconchego.Models.Subcategoria", b =>
                {
                    b.Property<int>("SubcategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SubcategoriaId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubcategoriaId"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("NomeSubcategoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NomeSubcategoria");

                    b.HasKey("SubcategoriaId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Subcategoria");
                });

            modelBuilder.Entity("Doceaconchego.Models.Venda", b =>
                {
                    b.Property<int>("VendaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VendaId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendaId"));

                    b.Property<DateTime>("DataVenda")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataVenda");

                    b.Property<int>("ValorVenda")
                        .HasColumnType("int")
                        .HasColumnName("ValorVenda");

                    b.Property<int>("vendedorId")
                        .HasColumnType("int");

                    b.HasKey("VendaId");

                    b.HasIndex("vendedorId");

                    b.ToTable("Venda");
                });

            modelBuilder.Entity("Doceaconchego.Models.vendedor", b =>
                {
                    b.Property<int>("vendedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("vendedorId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("vendedorId"));

                    b.Property<string>("Nomevendedor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nomevendedor");

                    b.HasKey("vendedorId");

                    b.ToTable("vendedor");
                });

            modelBuilder.Entity("Doceaconchego.Models.Clientehasvendas", b =>
                {
                    b.HasOne("Doceaconchego.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Doceaconchego.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Doceaconchego.Models.Venda", "Venda")
                        .WithMany()
                        .HasForeignKey("VendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Produto");

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("Doceaconchego.Models.Produto", b =>
                {
                    b.HasOne("Doceaconchego.Models.Subcategoria", "Subcategoria")
                        .WithMany()
                        .HasForeignKey("SubcategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subcategoria");
                });

            modelBuilder.Entity("Doceaconchego.Models.Subcategoria", b =>
                {
                    b.HasOne("Doceaconchego.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Doceaconchego.Models.Venda", b =>
                {
                    b.HasOne("Doceaconchego.Models.vendedor", "vendedor")
                        .WithMany()
                        .HasForeignKey("vendedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("vendedor");
                });
#pragma warning restore 612, 618
        }
    }
}
